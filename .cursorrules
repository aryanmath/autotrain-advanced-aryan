rule asr-integration:
  For this project, always follow these rules:

  - The codebase should match the structure, workflow, and code hygiene of the main branch of the official Hugging Face AutoTrain Advanced repository (https://github.com/huggingface/autotrain-advanced/tree/main).
  - The ASR (Automatic Speech Recognition) task must be implemented in exactly the same way as other tasks in the main repo (such as image classification, text classification, etc.), with only ASR-specific logic where absolutely necessary (such as preprocessing, training, and params).
  - All common logic (UI, backend, params, config, logs, dataset handling, etc.) must be shared for all tasks, including ASR. Only ASR-specific logic should be in ASR-specific files or blocks.
  - Do NOT change, reformat, or delete any main repo code unless absolutely necessary for ASR.
  - For every file, do a line-by-line, character-accurate comparison between the main repo and the local repo.
  - For every change, explain exactly what is being changed, added, or kept, and why, so that the ASR task is implemented in the main repo's style, with no unnecessary or custom code.
  - For every step, specify which file to start with, and guide the user through the process, so there are zero mistakes.

  ASR task requirements:

  - In the UI, users must be able to select the ASR task, select local hardware, and choose between basic/full params (and the backend must receive the correct params, not just for display).
  - For dataset source, there must be three options:
    1. Local: Upload a zip with a CSV or JSON file (with audio and transcription columns) and an audio folder. Column mapping must be dynamic and validated.
    2. Hugging Face: Enter a dataset name, train/valid splits, and column mapping. All logic should be common with other tasks.
    3. LiFE App: Only show this for ASR. When selected, use the existing LiFE App dataset handling and preprocessing logic from the local repo.
  - When training is started, the process must follow the same workflow as other tasks: preprocessing, params, dataset handling, etc. All common logic should be shared, and only ASR-specific logic should be in ASR-specific places.

  Never make arbitrary style changes, never reformat main repo code, and always explain every change. 